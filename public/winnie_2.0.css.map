{
  "version": 3,
  "file": "winnie_2.0.css",
  "sources": [
    "../src/App.html",
    "../src/Map.html",
    "../src/Share.html",
    "../src/TreeView.html",
    "../src/LineNode.html",
    "../src/LegendIconCell.html"
  ],
  "sourcesContent": [
    "{#if urlParams.edit}\n<div class=\"editor-sidebarContainer editor_sidebarExpanded\">\n\t<div class=\"sidebarPanel\">\n\t\t<div class=\"sidebarPanel-toolbarContainer\">\n\t\t\t<div class=\"dropdownMenuWidget\">\n{#each dropdownMenu as it}\n\t\t\t\t<div class=\"dropdownMenuWidget-item{it.checked ? ' checked' : ''}\" on:click=\"checkMe(it, this)\">\n\t\t\t\t\t<i class=\"icon-{it.name}\"></i>\n\t\t\t\t\t<span>{it.title}</span>\n\t\t\t\t</div>\n{/each}\n\t\t\t</div>\n\t\t</div>\n\t\t\t<div id=\"editor\" class=\"editor\"></div>\n\t</div>\n</div>\n{/if}\n<div class=\"editor-viewerContainer editor_sidebarExpanded\">\n\t<Map permalink={permalink} bind:map />\n</div>\n{#if share}\n<Share conf={conf} />\n{/if}\n\n\n<script>\n\tconst serverBase = window.serverBase || '//maps.kosmosnimki.ru/',\n\t\tchkPar = (key, h1, h2, zn) => h1[key] || (key in h2 ? h2[key] : zn || true);\n\n\timport Map from './Map.html';\n\timport Share from './Share.html';\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tshare: false,\n\t\t\t\tconf: '',\n\t\t\t\turlParams: {},\n\t\t\t\tdropdownMenu: [\n\t\t\t\t\t{ name: 'refresh', title: 'Refresh' },\n\t\t\t\t\t{ name: 'link', title: 'Share', checked: false }\n\t\t\t\t],\n\t\t\t\tmap: null,\n\t\t\t\tpermalink: null\n\t\t\t}\n\t\t},\n\t\tmethods: {\n\t\t\tcheckMe(it, node) {\n\t\t\t\tlet cmd = it.name,\n\t\t\t\t\tjson = this.editor.getValue(),\n\t\t\t\t\tout = null;\n\t\t\t\ttry {\n\t\t\t\t\tout = JSON.parse(json);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tlet error = this.editor.getSession().getAnnotations()[0];\n\t\t\t\t\talert('Ошибка в конфигурации:\\n строка: ' + error.row + '\\n позиция: ' + error.column + '\\n сообщение: ' + error.text);\n\t\t\t\t\tconsole.log('error in json: ' , error);\n\t\t\t\t}\n\t\t\t\tif (out) {\n\t\t\t\t\tif (cmd === 'refresh') {\n\t\t\t\t\t\tthis.set({permalink: out});\n\t\t\t\t\t} else if (cmd === 'link') {\n\t\t\t\t\t\tlet {share} = this.get();\n\t\t\t\t\t\tif (share) {\n\t\t\t\t\t\t\tnode.classList.remove('checked');\n\t\t\t\t\t\t\tthis.set({share: false});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnode.classList.add('checked');\n\t\t\t\t\t\t\tfetch(serverBase + 'TinyReference/Create.ashx', {\n\t\t\t\t\t\t\t\tmethod: 'post',\n\t\t\t\t\t\t\t\theaders: {'Content-type': 'application/x-www-form-urlencoded'},\n\t\t\t\t\t\t\t\tbody: L.gmxUtil.getFormData({WrapStyle: 'None', content: out}),\n\t\t\t\t\t\t\t\tmode: 'cors',\n\t\t\t\t\t\t\t\tcredentials: 'include'\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.then(res => res.json())\n\t\t\t\t\t\t\t.then(json => {\n\t\t\t\t\t\t\t\tif (json.Status === 'ok') {\n\t\t\t\t\t\t\t\t\tthis.set({share: true, conf:json.Result});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(console.error);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tcheckPermalink(out) {\n\t\t\t\tlet {urlParams} = this.get();\n\t\t\t\t// console.log('?config=7ZSC4  dddddddd', out, urlParams)\n\t\t\t\tif (out.app) {\n\t\t\t\t\tout.app.theme = chkPar('theme', urlParams, out.app, 'dark');\t\t// тема по умолчанию\n\t\t\t\t\tout.app.iconSidebar = chkPar('iconSidebar', urlParams, out.app);\t// iconSidebar по умолчанию\n\t\t\t\t\tout.app.treeView = chkPar('treeView', urlParams, out.app);\t\t\t// treeView по умолчанию\n\t\t\t\t\tout.app.iconLayers = chkPar('iconLayers', urlParams, out.app);\t\t// iconLayers по умолчанию\n\t\t\t\t\tout.app.drawing = chkPar('drawing', urlParams, out.app);\t\t\t// drawing по умолчанию\n\t\t\t\t\tout.app.gmxTimeline = chkPar('gmxTimeline', urlParams, out.app);\t// gmxTimeline по умолчанию\n\t\t\t\t}\n\t\t\t\tthis.set({permalink: out});\n\t\t\t\t// this.set({permalink: out, confStr: JSON.stringify(out, null, 2)});\n\t\t\t\tif (urlParams.edit) {\n\t\t\t\t\t// L.gmxUtil.requestLink('ext/ace.js').then(() => {\n\t\t\t\t\t\tvar editor = ace.edit(\"editor\");\n\t\t\t\t\t\teditor.setTheme(\"ace/theme/monokai\");\n\t\t\t\t\t\t// editor.session.setMode(\"ace/mode/json\");\n\t\t\t\t\t\teditor.getSession().setMode(\"ace/mode/json\");\n\n // editor.setOptions({\n    // mode: \"ace/mode/json\",\n    // theme: \"ace/theme/monokai\",\n    // fontSize: \"10pt\",\n    // showPrintMargin : false,\n    // enableBasicAutocompletion: true,\n    // enableSnippets: true,\n    // enableLiveAutocompletion: true,\n    // wrap: true,\n    // scrollPastEnd: true,\n    // displayIndentGuides: true,\n  // });\n\t\t\t\t\t\t// editor.session.setMode(\"ace/mode/javascript\");\n\t\t\t\t\t\teditor.container.getElementsByClassName('ace_scrollbar-v')[0].style.width = '4px';\n\t\t\t\t\t\teditor.setValue(JSON.stringify(out, null, 2))\n\t\t\t\t\t\tthis.editor = editor;\n\t\t\t\t\t\t// window.ted = editor;\n\t\t\t\t\t// });\n\t\t\t\t}\n\t\t\t\tif (out.app.gmxTimeline && out.app.gmxTimeline !== 'false') {\n\t\t\t\t\tL.gmxUtil.requestLink('//maps.kosmosnimki.ru/api/plugins/timeline/2.9.1/timeline.js');\n\t\t\t\t\tL.gmxUtil.requestLink('//maps.kosmosnimki.ru/api/plugins/timeline/2.9.1/timeline.css');\n\t\t\t\t\t// L.gmxUtil.requestLink('L.Control.gmxTimeLine.js');\n\t\t\t\t\tL.gmxUtil.requestLink('//maps.kosmosnimki.ru/api/plugins/external/GMXPluginTimeLine/L.Control.gmxTimeLine.js');\n\t\t\t\t\tL.gmxUtil.requestLink('//maps.kosmosnimki.ru/api/plugins/external/GMXPluginTimeLine/L.Control.gmxTimeLine.css');\n\t\t\t\t}\n\t\t\t},\n\t\t\tgetPermalink(id) {\n\t\t\t\tlet out = {};\n\t\t\t\tif (id) {\n\t\t\t\t\tfetch(serverBase + 'TinyReference/Get.ashx?WrapStyle=None&id=' + id, {\n\t\t\t\t\t\tmode: 'cors',\n\t\t\t\t\t\tcredentials: 'include'\n\t\t\t\t\t})\n\t\t\t\t\t.then(res => res.json())\n\t\t\t\t\t.then(json => {\n\t\t\t\t\t\tif (json.Status === 'ok') {\n\t\t\t\t\t\t\tout = json.Result ? JSON.parse(json.Result) : {};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.checkPermalink(out);\n\t\t\t\t\t});\n\t\t\t\t\t\t// .catch(err => console.log(err));\n\t\t\t\t// } else {\n\t\t\t\t\t// setTimeout(function() {\n\t\t\t\t\t\t// this.checkPermalink(out);\n\t\t\t\t\t// }.bind(this), 0);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tcomponents: {\n\t\t\tMap,\n\t\t\tShare\n\t\t},\n\n\t\tonstate({ changed, current, previous }) {\n\t\t\t// console.log('in onstate', changed, current, previous);\n\t\t\tif (changed.urlParams) {\n\t\t\t\tlet conf = current.urlParams.config || 'M6QMS';\n\t\t\t\tthis.getPermalink(conf);\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n<style>\n#editor {\n\theight: calc(100% - 40px);\n\ttop: 40px;\n}\n\n.sidebarPanel {\n    font-family: 'Roboto';\n\theight: 100%;\n}\n\n.editor-viewerContainer {\n  position: relative;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n  z-index: 5;\n  float: left;\n  width: 100%;\n}\n.editor-sidebarContainer .editor-viewerContainer {\n  left: 500px;\n}\n.editor-sidebarContainer {\n  position: relative;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  width: 0px;\n  overflow: hidden;\n  background: #fff;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  -webkit-transition: width .5s ease;\n  transition: width .5s ease;\n  z-index: 20;\n}\n\n.editor_sidebarExpanded.editor-sidebarContainer {\n  width: 500px;\n}\n\n.hidden {\n\tdisplay: none;\n}\n.dropdownMenuWidget {\n\tdisplay: table;\n}\n.dropdownMenuWidget {\n\theight:100%\n}\n.dropdownMenuWidget-item {\n\tdisplay: table-cell;\n\tvertical-align: middle;\n\tfont-size: 14px;\n\tcursor: pointer;\n\tpadding: 0px 10px;\n\twhite-space: nowrap;\n\tcolor: #424242;\n}\n.checked, .dropdownMenuWidget-item:hover, .dropdownMenuWidget-item.checked {\n\tbackground:rgba(0, 0, 0, 0.05)\n}\n\n.dropdownMenuWidget.right {\n    right: 0px;\n\tpadding: 0;\n    margin: 0;\n    position: absolute;\n    background-color: #ebebeb;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n    height: 26px;\n}\n\n.sidebarPanel-toolbarContainer {\n\tposition:absolute;\n\ttop:0;\n\tleft:0;\n\tright:0;\n\theight:40px;\n\n\tborder-right:1px solid #f0f0f0;\n\tbackground-color:#ebebeb;\n\tbox-shadow:0 0 10px rgba(0, 0, 0, 0.5);\n\n\tz-index:40\n}\n\n.pointer.title {\n    position: relative;\n    bottom: 4px;\n}\n\n</style>\n",
    "<div id=\"map\"></div>\n\n<style>\n:global(.leaflet-gmx-loaderStatus.leaflet-control) {\n    top: -123px;\n    right: 5px;\n    left: unset;\n}\n</style>\n\n<script>\n\timport TreeView from './TreeView.html';\n\n\timport SidebarControl from  'scanex-leaflet-sidebar';\n\timport 'scanex-leaflet-sidebar/dist/scanex-leaflet-sidebar.css';\n\n\timport IconLayers from 'leaflet-iconlayers';\n\timport 'leaflet-iconlayers/dist/iconLayers.css';\n\t\n\timport './iconLayersDark.css';\n\n\tconst serverBase = window.serverBase || '//maps.kosmosnimki.ru/';\n\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tlayersTree: {\n\t\t\t\t\toptions: {},\n\t\t\t\t\tvisible: {},\n\t\t\t\t\texpanded: {}\n\t\t\t\t},\n\t\t\t\tpermalink: null,\n\t\t\t\tmap: null\n\t\t\t}\n\t\t},\n\t\tmethods: {\n\t\t\tcreateMap(it) {\n\t\t\t\tlet {layersTree} = this.get();\n\t\t\t\tlet app = it.app || {},\n\t\t\t\t\tgmxMap = app.gmxMap || {},\n\t\t\t\t\tstate = it.state || {},\n\t\t\t\t\t// layersTree = state.layersTree || {},\n\t\t\t\t\tcalendar = state.calendar || {},\n\t\t\t\t\tmapID = gmxMap.mapID || '946GH',\n\t\t\t\t\tapiKey = gmxMap.apiKey || 'Z2SSNR87N4',\n\t\t\t\t\tpos = state.map ? state.map.position : {};\n\n\t\t\t\t// console.log('createMap', it)\n\t\t\t\tif(app.theme) {\n\t\t\t\t\tdocument.body.classList.add(app.theme);\n\t\t\t\t}\n\t\t\t\tif(L.leafletMap) {\n\t\t\t\t\tL.leafletMap.remove();\n\t\t\t\t}\n\n\t\t\t\tlayersTree = state.layersTree || layersTree;\n\t\t\t\tlayersTree.options = layersTree.options || {};\n\t\t\t\tthis.layersTree = layersTree;\n\t\t\t\tlet map = new L.Map('map', {\n\t\t\t\t\tsrs: 3857,\n\t\t\t\t\tlayers: [],\n\t\t\t\t\tcenter: new L.LatLng(pos.y || 0, pos.x || 60),\n\t\t\t\t\tzoom: pos.z || 3\n\t\t\t\t});\n\t\t\t\tL.leafletMap = map;\n\n\t\t\t\tmap.gmxControlsManager.init({\n\t\t\t\t\tgmxDrawing: !app.drawing || app.drawing === 'false' ? null : {position: 'right'},\n\t\t\t\t\tgmxZoom: {position: 'gmxbottomright'},\n\t\t\t\t\tgmxLoaderStatus: {position: 'gmxbottomright'},\n\t\t\t\t\tgmxHide: null\n\t\t\t\t});\n\t\t\t\tmap.gmxControlsManager.setSvgSprites('//www.kosmosnimki.ru/lib/geomixer_1.3/img/svg-symbols.svg');\n\n\t\t\t\tif (app.iconSidebar && app.iconSidebar !== 'false') {\n\t\t\t\t\tvar iconSidebar = new SidebarControl({position: 'topleft', className: 'sidebarControl'});\n\t\t\t\t\ticonSidebar.addTo(map);\n\t\t\t\t\ticonSidebar.getContainer().classList.add('sidebarControl');\n\n\t\t\t\t\tthis.iconSidebar = iconSidebar;\n\t\t\t\t\tif (app.treeView && app.treeView !== 'false') {\n\t\t\t\t\t\tvar treePane = iconSidebar.addTab({id: 'treeView', icon: 'icon-layers', opened: 'opened', closed: 'closed'});\n\t\t\t\t\t\tthis.treePane = treePane;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdocument.body.classList.add('noIconSidebar');\n\t\t\t\t}\n\n\t\t\t\tthis.mapID = mapID;\n\t\t\t\tlet opt = {\n\t\t\t\t\tleafletMap: map,\n\t\t\t\t\tapiKey: apiKey,\n\t\t\t\t\t// visibleItemOnly: true,\t// TODO: только видимые элементы (слои и папки) баги серверного скрипта\n\t\t\t\t\tsetZIndex: true\n\t\t\t\t\t// ,\n\t\t\t\t\t// visibility: layersTree.visible || {}\n\t\t\t\t};\n\t\t\t\tL.gmx.loadMap(mapID, opt).then(function(gmxMap) {\n\t\t\t\t\tthis.gmxMap = gmxMap;\n\t\t\t\t\tlet dateInterval = state.calendar || {},\n\t\t\t\t\t\ttb = dateInterval.dateBegin,\n\t\t\t\t\t\tte = dateInterval.dateEnd;\n\t\t\t\t\tif(!tb) {\n\t\t\t\t\t\tlet day = 1000*60*60*24,\n\t\t\t\t\t\t\tcd = new Date();\n\t\t\t\t\t\ttb = Date.UTC(cd.getUTCFullYear(), cd.getUTCMonth(), cd.getUTCDate());\n\t\t\t\t\t\tte = tb + day;\n\t\t\t\t\t}\n\t\t\t\t\tlet db = new Date(tb), de = new Date(te);\n\t\t\t\t\tgmxMap.layers.forEach((it) => {\n\t\t\t\t\t\tif(it.getGmxProperties) {\n\t\t\t\t\t\t\tlet props = it.getGmxProperties(),\n\t\t\t\t\t\t\t\tid = props.name;\n\t\t\t\t\t\t\tif(it.setDateInterval) {\n\t\t\t\t\t\t\t\tit.setDateInterval(db, de);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(id in layersTree.visible) {\n\t\t\t\t\t\t\t\tmap[layersTree.visible[id] ? 'addLayer' : 'removeLayer'](it);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tL.gmx.gmxMapManager.iterateNode(gmxMap.rawTree, function(node, prnt) {\n\t\t\t\t\t\tlet props = node.content.properties,\n\t\t\t\t\t\t\tid = props.name || props.GroupID;\n\t\t\t\t\t\tif (props.GroupID) {\n\t\t\t\t\t\t\tif (props.expanded && !(id in layersTree.expanded)) {\n\t\t\t\t\t\t\t\tlayersTree.expanded[id] = props.expanded;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (props.visible && !(id in layersTree.visible)) {\n\t\t\t\t\t\t\t\tlayersTree.visible[id] = props.visible;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (props.visible && !(id in layersTree.visible)) {\n\t\t\t\t\t\t\t\tlayersTree.visible[id] = props.visible;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlet prntProps = prnt.properties;\n\t\t\t\t\t\t\tif (prntProps.GroupID && prntProps.list) {\n\t\t\t\t\t\t\t\tlet opt = layersTree.options[id] || {};\n\t\t\t\t\t\t\t\topt.list = prntProps.list;\n\t\t\t\t\t\t\t\tlayersTree.options[id]  = opt;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, {nodes: gmxMap.nodes});\n\n\t\t\t\t\t// this.set({layersTree: layersTree}); \n\t\t\t\t\t// this.set({gmxMap: gmxMap}); \n\t\t\t\t\tlet shiftIconLayers = false,\n\t\t\t\t\t\tgmxTimelineContainer = null,\n\t\t\t\t\t\trepaintTimeline = null;\n\n\t\t\t\t\tif (app.gmxTimeline && app.gmxTimeline !== 'false') {\n\t\t\t\t\t\t/* TimeLine */\n\t\t\t\t\t\tvar control = L.control.gmxTimeline({\n\t\t\t\t\t\t\tmoveable: true\n\t\t\t\t\t\t\t}).on('dateInterval', function (ev) {\n\t\t\t\t\t\t\t\tgmxMap.layersByID[ev.layerID].setDateInterval(ev.beginDate, ev.endDate);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.on('statechanged', function () {\n\t\t\t\t\t\t\t\trepaintTimeline();\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.on('click', function (ev) {\n\t\t\t\t\t\t\t\tgmxMap.layersByID[ev.layerID].repaint();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.gmxTimeline = control;\n\t\t\t\t\t\trepaintTimeline = () => {\n\t\t\t\t\t\t\tif (control._container) {\n\t\t\t\t\t\t\t\tcontrol._container.classList[shiftIconLayers ? 'add' : 'remove']('shiftTimeline');\n\t\t\t\t\t\t\t\tcontrol._redrawTimeline();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.iconSidebar) {\n\t\t\t\t\t\tlet triggerSidebar = (id) => {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (id === 'treeView') {\n\t\t\t\t\t\t\t\tshiftIconLayers = true;\n\t\t\t\t\t\t\t\tif (treePane) {\n\t\t\t\t\t\t\t\t\tthis._initTree({container: treePane, layersTree: layersTree, rawTree: gmxMap.rawTree, gmxTimeline: this.gmxTimeline});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tshiftIconLayers = false;\n\t\t\t\t\t\t\t\tif (treePane) {\n\t\t\t\t\t\t\t\t\ttreePane.innerHTML = '';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (this.IconLayersContainer) {\n\t\t\t\t\t\t\t\tthis.IconLayersContainer.classList[shiftIconLayers ? 'add' : 'remove']('shiftIconLayers');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (repaintTimeline) {\n\t\t\t\t\t\t\t\trepaintTimeline();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\tthis.iconSidebar.on('change', e => triggerSidebar(e.detail.current));\n\t\t\t\t\t}\n\n\t\t\t\t\tlet bLayersConf = state.baseLayersManager || { activeIDs: gmxMap.properties.BaseLayers };\n\t\t\t\t\tthis._initBaseLayers(map, bLayersConf, app);\n\t\t\t\t}.bind(this))\n\t\t\t\t.catch(console.log);\n\t\t\t\tthis.set({map: map, config: it});\n\t\t\t},\n\t\t\t_initBaseLayers(map, baseLayers, app) {\n\t\t\t\tconst lang = 'rus';\n\t\t\t\tlet blm = map.gmxBaseLayersManager,\n\t\t\t\t\tactiveIDs = baseLayers.activeIDs || ['sputnik'],\n\t\t\t\t\tcurrentID = baseLayers.currentID || activeIDs[0];\n\t\t\t\tblm.initDefaults().then(function() {\n\t\t\t\t\tblm.setActiveIDs(activeIDs);\n\t\t\t\t\tlet layers = blm.getActiveIDs().map(id => {\n\t\t\t\t\t\tvar layer = blm.get(id);\n\t\t\t\t\t\tif (!layer) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tlayer: layer,\n\t\t\t\t\t\t\t\ticon: layer.options.icon,\n\t\t\t\t\t\t\t\ttitle: layer.options[lang]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}).filter(e => e);\n\n\t\t\t\t\tif (app.iconLayers && app.iconLayers !== 'false') {\n\t\t\t\t\t\tlet baseLayersControl = new IconLayers(layers, {id: 'iconLayers'});\n\t\t\t\t\t\tmap.gmxControlsManager.add(baseLayersControl);\n\t\t\t\t\t\tmap.addControl(baseLayersControl);\n\t\t\t\t\t\tbaseLayersControl.setActiveLayer(blm.get(currentID));\n\t\t\t\t\t\tthis.IconLayersContainer = baseLayersControl.getContainer();\n\t\t\t\t\t}\n\t\t\t\t\tblm.setCurrentID(currentID);\n\t\t\t\t\tif (app.treeView === 'opened' && this.iconSidebar) { this.iconSidebar.setCurrent('treeView'); }\n\t\t\t\t}.bind(this));\n\t\t\t},\n\t\t\t_getNodeIndex(target) {\n\t\t\t\tlet arr = target.parentNode.children,\n\t\t\t\t\ti, len;\n\t\t\t\tfor(i = 0, len = arr.length; i < len; i++) {\n\t\t\t\t\tif (arr[i] === target) break;\n\t\t\t\t}\n\t\t\t\treturn i === len ? null : i;\n\t\t\t},\n\n\t\t\t_initTree(it) {\n\t\t\t\tlet rawTree = {\n\t\t\t\t\ttype: 'map',\n\t\t\t\t\tcontent: it.rawTree\n\t\t\t\t};\n\t\t\t\tthis._treeView = new TreeView({\n\t\t\t\t\tappendNode: (id) => {\t// TODO: только видимые элементы (слои и папки) баги серверного скрипта\n\t\t\t\t\t\treturn;\n\t\t\t\t\t\t/*\n\t\t\t\t\t\tif (this.gmxMap.nodes) {\n\t\t\t\t\t\t\tlet {map} = this.get();\n\t\t\t\t\t\t\tlet mapID = this.mapID,\n\t\t\t\t\t\t\t\tlayersTree = this.layersTree,\n\t\t\t\t\t\t\t\tvisible = layersTree.visible || {},\n\t\t\t\t\t\t\t\t// mapItem = L.gmx._maps['maps.kosmosnimki.ru'][mapID],\n\t\t\t\t\t\t\t\tgmxMap = this.gmxMap,\n\t\t\t\t\t\t\t\tlayersByID = gmxMap.layersByID;\n\t\t\t\t\t\t\tL.gmx.gmxMapManager.getMapFolder({\n\t\t\t\t\t\t\t\ttreeConfig: layersTree,\n\t\t\t\t\t\t\t\tmapId: mapID,\n\t\t\t\t\t\t\t\tfolderId: id\n\t\t\t\t\t\t\t}).then(function(json) {\n\t\t\t\t\t\t\t\tL.gmx.gmxMapManager.iterateNode(json.content, function(node) {\n\t\t\t\t\t\t\t\t\tlet props = node.content.properties,\n\t\t\t\t\t\t\t\t\t\tlayerId = props.name;\n\t\t\t\t\t\t\t\t\tif (layerId && layerId in visible && visible[layerId] !== props.visible) {\n\t\t\t\t\t\t\t\t\t\tprops.visible = visible[layerId];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}, {nodes: gmxMap.nodes});\n\t\t\t\t\t\t\t\tgmxMap.addLayersToMap(map);\n\t\t\t\t\t\t\t\tthis.treePane.innerHTML = '';\n\t\t\t\t\t\t\t\tthis._initTree({\n\t\t\t\t\t\t\t\t\tcontainer: this.treePane,\n\t\t\t\t\t\t\t\t\tlayersTree: this.layersTree,\n\t\t\t\t\t\t\t\t\trawTree: gmxMap.rawTree\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t}.bind(this));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t*/\n\t\t\t\t\t},\n\t\t\t\t\ttarget: it.container,\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tcontainer: it.container,\n\t\t\t\t\t\tlayersTree: it.layersTree,\n\t\t\t\t\t\tgmxTimeline: it.gmxTimeline ? true : false,\n\t\t\t\t\t\trawTree: rawTree\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tthis._treeView.on('command', (ev) => {\n\t\t\t\t\tlet {map} = this.get();\n\t\t\t\t\tlet cmd = ev.cmd,\n\t\t\t\t\t\ttarget = ev.originalEvent ? ev.originalEvent.target : null,\n\t\t\t\t\t\tlayersTree = this.layersTree,\n\t\t\t\t\t\tgmxMap = this.gmxMap,\n\t\t\t\t\t\tnode = gmxMap.nodes ? gmxMap.nodes[ev.id] : true,\n\t\t\t\t\t\tgmxLayer = gmxMap.layersByID[ev.id];\n\n\t\t\t\t\t// console.log('Map command', ev, this.layersTree);\n\t\t\t\t\tif (gmxLayer) {\n\t\t\t\t\t\tif (cmd === 'fitBounds') {\n\t\t\t\t\t\t\tlet bounds = gmxLayer.getBounds(),\n\t\t\t\t\t\t\t\tzoom = map.getBoundsZoom(bounds),\n\t\t\t\t\t\t\t\topt = gmxLayer.options;\n\n\t\t\t\t\t\t\tzoom = zoom < opt.minZoom ? opt.minZoom : (zoom > opt.maxZoom ? opt.maxZoom : zoom);\n\t\t\t\t\t\t\tmap.setView(bounds.getCenter(), zoom);\n\t\t\t\t\t\t} else if (cmd === 'toggleNode') {\n\t\t\t\t\t\t\tlet flag = ev.set;\n\t\t\t\t\t\t\tif (flag) {\n\t\t\t\t\t\t\t\tif (!gmxLayer._map) {\n\t\t\t\t\t\t\t\t\tmap.addLayer(gmxLayer);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (gmxLayer._map) {\n\t\t\t\t\t\t\t\t\tmap.removeLayer(gmxLayer);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (cmd === 'toggleVisibility') {\n\t\t\t\t\t\t\tif (gmxLayer._map) {\n\t\t\t\t\t\t\t\tmap.removeLayer(gmxLayer);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tmap.addLayer(gmxLayer);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (cmd === 'toggleTimeline' && this.gmxTimeline) {\n\t\t\t\t\t\t\tif (target.classList.contains('enabled')) {\n\t\t\t\t\t\t\t\tif (!this.gmxTimeline._map) {\n\t\t\t\t\t\t\t\t\tmap.addControl(this.gmxTimeline);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis.gmxTimeline.addLayer(gmxLayer);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.gmxTimeline.removeLayer(gmxLayer);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (cmd === 'toggleStyle') {\n\t\t\t\t\t\t\tlet num = this._getNodeIndex(target.parentNode),\n\t\t\t\t\t\t\t\tstyles = gmxLayer.getStyles();\n\t\t\t\t\t\t\tif (target.classList.contains('enabled')) {\n\t\t\t\t\t\t\t\ttarget.classList.remove('enabled');\n\t\t\t\t\t\t\t\tstyles[num].disabled = true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttarget.classList.add('enabled');\n\t\t\t\t\t\t\t\tdelete styles[num].disabled;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tgmxLayer.setStyles(styles);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (cmd === 'toggleVisibility' && !node) {\n\t\t\t\t\t\t\tthis._treeView.appendNode(ev.id);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t\n\t\tonstate({ changed, current, previous }) {\n\t\t\tif (changed.permalink && current.permalink) {\n\t\t\t\tthis.createMap(current.permalink);\n\t\t\t}\n\t\t}\n\t}\n</script>\n",
    "<div class=\"share\">\n\t<div class=\"arrow\"></div>\n\t{#if title}<h3 class=\"popover-title\">{title}</h3>{/if}\n\t<div class=\"popover-content\">\n\t\t<div class=\"shareDialogContainer\">\n\t\t\t<div class=\"shareDialog\">\n\t\t\t\t<div class=\"shareDialog-row shareDialog-title\">\n\t\t\t\t\t<span class=\"bold\">Ссылка на карту:</span>\n\t\t\t\t\t<a class=\"gmx-link_icon\" target=\"_blank\" href=\"//www.twitter.com/share?url={link}\"><i class=\"icon-twitter\"></i></a>\n\t\t\t\t\t<a class=\"gmx-link_icon\" target=\"_blank\" href=\"https://www.facebook.com/sharer/sharer.php?u={link}\"><i class=\"icon-facebook\"></i></a>\n\t\t\t\t\t<a class=\"gmx-link_icon\" target=\"_blank\" href=\"//vkontakte.ru/share.php?url{link}\"><i class=\"icon-vk\"></i></a>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"shareDialog-row\">\n\t\t\t\t\t<div class=\"gmx-table\">\n\t\t\t\t\t\t<input class=\"shareDialog-inputPermalinkUrl\" type=\"text\" readonly=\"readonly\" value=\"{link}\">\n\t\t\t\t\t\t<a class=\"gmx-link_icon\" target=\"_blank\" href=\"{link}\"><i class=\"icon-link-ext\" title=\"открыть в новом окне\"></i></a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"shareDialog-row bold\">Код для вставки:</div>\n\t\t\t\t<div class=\"shareDialog-row\">\n\t\t\t\t\t<div class=\"gmx-table shareDialog-resolutionTable\">\n\t\t\t\t\t\t\t<input class=\"\" type=\"number\" value=\"{frameWidth}\" on:change=\"set({frameWidth: this.value})\">\n\t\t\t\t\t\t\t<span class=\"shareDialog-resolutionCross\">x</span>\n\t\t\t\t\t\t\t<input class=\"\" type=\"number\" value=\"{frameHeight}\" on:change=\"set({frameHeight: this.value})\">\n\t\t\t\t\t\t<span class=\"shareDialog-validationError hidden\">\n\t\t\t\t\t\t\t<span>предпросмотр</span><i class=\"icon-link-ext\"></i>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"shareDialog-previewLinkCell constrLink shareDialog-validationOk\">\n\t\t\t\t\t\t\t<a class=\"shareDialog-previewLink gmx-link\" href=\"{link}&edit=1\" target=\"_blank\">конструктор приложений</a><i class=\"gmx-icon icon-link-ext\"></i>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"shareDialog-row\">\n\t\t\t\t\t<textarea class=\"shareDialog-validationOk\" readonly=\"readonly\">&lt;iframe src=\"{link}\" width=\"{frameWidth}\" height=\"{frameHeight}\"&gt;&lt;/iframe&gt;</textarea>\n\t\t\t\t\t<div class=\"shareDialog-validationErrorView hidden\"><div class=\"alertWidget ui-widget\"></div></div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"shareDialog-row\">\n\t\t\t\t\t<span class=\"shareDialog-previewLinkCell shareDialog-validationOk\">\n\t\t\t\t\t\t<a class=\"shareDialog-previewLink gmx-link\" href=\"//www.kosmosnimki.ru/demo/winnie_2.0/iframePreview.html?width={frameWidth}&amp;height={frameHeight}&amp;url={link}\" target=\"_blank\">предпросмотр</a><i class=\"gmx-icon icon-link-ext\"></i>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n \n<script>\n\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tframeWidth: 800,\n\t\t\t\tframeHeight: 600,\n\t\t\t\tconf: 'R6UIY',\n\t\t\t\ttitle: ''\n\t\t\t}\n\t\t},\n\t\tcomputed: {\n\t\t\tlink: ({ conf }) => '//www.kosmosnimki.ru/demo/winnie_2.0/?config=' + conf,\n\t\t}\n\t}\n</script>\n\n<style>\n.share {\n    background-color: white;\n\tmargin-top: 6px;\n\tposition: absolute;\n\tz-index: 80;\n    left: 30px;\n    top: 40px;\n}\n.share {\n    padding: 1px;\n\tpadding-top: 0px;\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    font-weight: normal;\n    text-align: left;\n    border: 1px solid rgba(0, 0, 0, 0.2);\n    border-radius: 4px;\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\n    white-space: normal;\n    font-size: 11px;\n}\n.shareDialog-row {\n    padding-bottom: 8px;\n}\n.bold {\n    font-weight: bold;\n}\n.shareDialog-resolutionTable input {\n    width: 40px;\n\ttext-align: center;\n}\ntextarea.shareDialog-validationOk {\n    width: 96%;\n\theight: 66px;\n}\n\n.hidden {\n\tdisplay: none;\n}\n.shareDialog-previewLinkCell {\n    width: 50%;\n    text-align: right;\n\tfloat: right;\n}\n.constrLink {\n\tfloat: unset;\n    padding-left: 14px;\n}\n.shareDialog-previewLinkCell a {\n    color: #121212;\n}\n.shareDialog-inputPermalinkUrl {\n    width: 260px;\n}\n.shareDialog .shareDialog-inputEmbedCode {\n    height: 55px;\n    resize: none;\n    display: block;\n    font-family: monospace;\n}\n.share > .arrow:after {\n    border-width: 8px;\n    content: \"\";\n}\n.share > .arrow:after {\n    content: \" \";\n    top: 1px;\n    margin-left: -5px;\n    border-top-width: 0px;\n    border-bottom-color: #fff;\n}\n.share > .arrow, .share > .arrow:after {\n\tleft: 32%;\n    top: -5px;\n    position: relative;\n    display: block;\n    width: 0px;\n    height: 0px;\n    border-style: solid;\n}\n.gmx-link_icon {\n    float: right;\n\tcolor: grey;\n    font-size: 12px;\n\tmargin-top: 4px;\n}\n.shareDialog i {\n    font-size: 12px;\n}\n.icon-twitter:before {\n    content: '\\';\n}\n.icon-facebook:before {\n    content: '\\';\n}\n.icon-vk:before {\n    content: '\\';\n}\n.icon-link-ext:before {\n    content: '\\';\n}\n.popover-content {\n    padding: 6px 8px;\n}\n</style>\n",
    "<div class=\"TreeView\" on:click=\"chkEvent(event)\">\n\t<LineNode line={rawTree} parentProps={rawTree.content.properties} bind:layersTree bind:gmxTimeline />\n</div>\n \n\n<style>\n.TreeView {\n    position: absolute;\n\twidth: 100%;\n    overflow-y: scroll;\n\tbackground-color: white;\n}\n</style>\n\n<script>\n\timport LineNode from './LineNode.html';\n\tlet regs = {\n\t\tcmd: /cmd:(\\w+)/,\n\t\tid: /id:(\\w+)/\n\t}\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tconfig: {},\n\t\t\t\tlayersTree: {\n\t\t\t\t\tvisible: {},\n\t\t\t\t\texpanded: {}\n\t\t\t\t},\n\t\t\t\t//gmxTimeline: false,\n\t\t\t\tgroup: null,\n\t\t\t\trawTree: null\n\t\t\t}\n\t\t},\n\n\t\tmethods: {\n\t\t\tchkEvent(ev) {\n\t\t\t\tlet target = ev.target,\n\t\t\t\t\tclassName = target.className,\n\t\t\t\t\tarr = regs.cmd.exec(className);\n\n\t\t\t\tif (arr && arr.length === 2) {\n\t\t\t\t\tlet out = {\n\t\t\t\t\t\tcmd: arr[1],\n\t\t\t\t\t\ttype: ev.type,\n\t\t\t\t\t\toriginalEvent: ev\n\t\t\t\t\t};\n\t\t\t\t\tfor(let i = 0; i < 10; i++) {\n\t\t\t\t\t\tif (target.classList.contains('line')) {\n\t\t\t\t\t\t\tout.nodeType = target.classList.contains('layer') ? 'layer' : 'group';\n\t\t\t\t\t\t\tout.id = this._getId(target.className);\n\t\t\t\t\t\t\tout.target = target;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttarget = target.parentNode;\n\t\t\t\t\t}\n\t\t\t\t\tif (out.id) {\n\t\t\t\t\t\tthis.treeCommands(out);\n\t\t\t\t\t\tthis.fire('command', out);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t_getId(className) {\n\t\t\t\tlet arr = regs.id.exec(className);\n\t\t\t\treturn arr && arr.length === 2 ? arr[1] : '';\n\t\t\t},\n\t\t\t_isExistVisible(node, layersTree) {\n\t\t\t\tlet cnt = 0,\n\t\t\t\t\tlen = node.children.length; \n\t\t\t\tfor(let i = 0; i < len; i++) {\n\t\t\t\t\tlet it = node.children[i],\n\t\t\t\t\t\tid = this._getId(it.className);\n\t\t\t\t\tif (layersTree.visible[id]) {\n\t\t\t\t\t\tcnt++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn cnt === 0 ? 0 :\t\t// notVisibleLayers\n\t\t\t\t\t(cnt === len ? 1 :\t\t// allVisibleLayers\n\t\t\t\t\t0.5);\t\t\t\t\t// existsVisibleLayers\n\t\t\t},\n\n\t\t\t_toggleParents(node, visible, layersTree) {\n\t\t\t\tlet flag = true;\n\t\t\t\twhile(flag) {\n\t\t\t\t\tnode = node.parentNode\n\t\t\t\t\tif (node.classList.contains('line')) {\n\t\t\t\t\t\tlet id = this._getId(node.className);\n\t\t\t\t\t\tif (id) {\n\t\t\t\t\t\t\tlayersTree.visible[id] = visible;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (node.classList.contains('group')) {\n\t\t\t\t\t\tif (!visible && this._isExistVisible(node, layersTree)) {\n\t\t\t\t\t\t\tflag = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflag = false;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t_uncheckRadio(node, id, layersTree) {\n\t\t\t\tfor(let i = 0, len = node.children.length; i < len; i++) {\n\t\t\t\t\tlet it = node.children[i],\n\t\t\t\t\t\tpid = this._getId(it.className);\n\t\t\t\t\tif (pid !== id) {\n\t\t\t\t\t\tthis.fire('command', { id: pid, set: false, cmd: 'toggleNode' });\n\t\t\t\t\t\t// layersTree.expanded[pid] = ph.set;\n\t\t\t\t\t\tlayersTree.visible[pid] = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t_iterateNodeChilds(node, visible, layersTree) {\n\t\t\t\tlet id = this._getId(node.className),\n\t\t\t\t\tisGroup = node.classList.contains('group'),\n\t\t\t\t\tul = node.getElementsByTagName('ul')[0];\n\n\t\t\t\tlayersTree.visible[id] = visible;\n\t\t\t\tif (isGroup) {\n\t\t\t\t\tlayersTree.expanded[id] = visible;\n\t\t\t\t} else {\n\t\t\t\t\tthis.fire('command', { id: id, set: visible, cmd: 'toggleNode' });\n\t\t\t\t}\n\t\t\t\tif (ul) {\n\t\t\t\t\tlet isRadio = ul.classList.contains('radio'),\n\t\t\t\t\t\tflag = visible;\n\t\t\t\t\tfor(let i = 0, len = ul.children.length; i < len; i++) {\n\t\t\t\t\t\tlet it = ul.children[i],\n\t\t\t\t\t\t\tpid = this._getId(it.className);\n\t\t\t\t\t\tif (isRadio && i) { flag = false; }\n\t\t\t\t\t\tthis._iterateNodeChilds(it, flag, layersTree);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\ttreeCommands(attr) {\n\t\t\t\tlet {layersTree, rawTree} = this.get(),\n\t\t\t\t\tid = attr.id,\n\t\t\t\t\tisGroup = attr.nodeType === 'group',\n\t\t\t\t\t// expanded = attr.nodeType ? layersTree.expanded : layersTree.visible,\n\t\t\t\t\tisExpanded = !layersTree.expanded[id],\n\t\t\t\t\tisVisible = !layersTree.visible[id],\n\t\t\t\t\toptions = layersTree.options[id] || {},\n\t\t\t\t\tph = {\n\t\t\t\t\t\tcmd: 'toggleNode',\n\t\t\t\t\t\ttype: attr.type,\n\t\t\t\t\t\tnodeType: attr.nodeType,\n\t\t\t\t\t\toriginalEvent: attr.originalEvent\n\t\t\t\t\t};\n\n\t\t\t\t// console.log('treeCommands', attr.cmd, attr.nodeType);\n\n\t\t\t\tif (attr.cmd === 'clickOnExpander') {\n\t\t\t\t\tlayersTree.expanded[id] = !layersTree.expanded[id];\n\t\t\t\t\tthis.set({layersTree: layersTree});\n\t\t\t\t} else if (attr.cmd === 'toggleGroup') {\n\t\t\t\t\tthis._iterateNodeChilds(attr.target, isVisible, layersTree);\n\t\t\t\t\tthis._toggleParents(attr.target, isExpanded, layersTree);\n\n\t\t\t\t\tthis.set({layersTree: layersTree});\n\t\t\t\t} else if (attr.cmd === 'toggleVisibility') {\n\t\t\t\t\tlet node = attr.target,\n\t\t\t\t\t\tisGroup = node.getElementsByClassName('expanderInput')[0],\n\t\t\t\t\t\texpanded = isGroup ? layersTree.expanded : layersTree.visible,\n\t\t\t\t\t\tul = node.parentNode;\n\n\t\t\t\t\tif (expanded[id]) {\n\t\t\t\t\t\tdelete expanded[id];\n\t\t\t\t\t} else {\n\t\t\t\t\t\texpanded[id] = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (ul && ul.classList.contains('radio')) {\n\t\t\t\t\t\tthis._uncheckRadio(ul, id, layersTree);\n\t\t\t\t\t}\n\t\t\t\t\tthis._toggleParents(attr.target, expanded[id], layersTree);\n\t\t\t\t\tthis.set({layersTree: layersTree});\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\n\t\t\tappendNode(id) {\n\t\t\t\tthis.options.appendNode(id);\n\t\t\t}\n\t\t},\n\t\tcomponents: {\n\t\t\tLineNode\n\t\t}\n\t}\n\n</script>\n",
    "<li class=\"line cmd:toggleIcons id:{nodeID} {line.type}\" ref:line>\n<div class=\"mega\">\n{#if properties}\n {#if line.type !== 'map'}\n\t{#if line.type === 'group'}\n\t<input class=\"expander expanderInput hidden\" type=\"checkbox\" checked=\"{isOpened}\" />\n\t<span class=\"expander pointer expanderCont cmd:clickOnExpander\" on:click=\"clickOnExpander(this)\"></span>\n\t{/if}\n\t\t{#if line.type === 'layer'} <!-- begin: line.type === 'layer' -->\n\t\t\t{#if properties.styles.length > 1}\n\t<span class=\"cont-overlays\"><svg role=\"img\" class=\"svgIcon\"><use xlink:href=\"#overlays\" href=\"#overlays\"></use></svg></span>\n\t\t\t{/if}\n\t<span class=\"icons \">\n\t\t{#if properties.description}\n\t\t<span class=\"pointer cmd:showInfo cont-info\" title=\"View description\" on:click=\"showInfo(this, event)\"><svg role=\"img\" class=\"svgIcon\"><use xlink:href=\"#info-circle-i\" href=\"#info-circle-i\"></use></svg></span>\n\t\t{/if}\n \t\t<span class=\"pointer cmd:fitBounds cont-center\"  title=\"Move map to this layer\"><svg role=\"img\" class=\"svgIcon\"><use xlink:href=\"#center-on-click\" href=\"#center-on-click\"></use></svg></span>\n\t\t\t\n\t\t{#if gmxTimeline && properties.Temporal && (properties.IsRasterCatalog || (properties.Quicklook && properties.Quicklook !== 'null'))}\n\t\t<span class=\"pointer cmd:toggleTimeline timeline disabled\" on:click=\"toggleTimeline(this)\"><svg role=\"img\" class=\"svgIcon\"><use xlink:href=\"#timeline-icon\" href=\"#timeline-icon\"></use></svg></span>\n\t\t{/if}\n\t</span>\n\t\t{/if} <!-- end: line.type === 'layer' -->\n {/if}\n {#if line.type !== 'map'}\n\t<span class=\"cont\">\n\t\t{#if line.type === 'group'}\n\t\t\t{#if properties.ShowCheckbox}\n\t\t\t\t<input class=\"check visibility pointer cmd:toggleGroup {line.type} id:{nodeID}\" name=\"{checkboxName}\" type=\"{checkboxType}\" checked=\"{isGroupVisible}\" />\n\t\t\t{/if}\n\t\t{:else}\n\t\t\t<input class=\"check visibility pointer cmd:toggleVisibility {line.type} id:{nodeID}\" name=\"{checkboxName}\" type=\"{checkboxType}\" checked=\"{isVisible}\" />\n\t\t{/if}\n\t\t{#if line.type === 'layer' && styles.length && styles.length < 2 && styles[0].RenderStyle}\n\t\t\t<LegendIconCell item={styles[0]} type={properties.GeometryType} />\n\t\t{/if}\n\t\t<label class=\"pointer title cmd:{line.type === 'group' ? 'toggleGroup' : 'toggleVisibility'} {multiStyles}\">{properties.title}</label>\n\t\t<div class=\"description {properties.description ? '' : 'collapse'}\">{properties.description || ''}</div>\n\t\t{#if line.type === 'layer'}\n\t\t\t{#if styles.length && styles.length > 1 && styles[0].RenderStyle}\n\t\t\t<div class=\"legend\">\n\t\t\t\t<div class=\"legend-cont\">\n\t\t\t\t{#each styles as it}\n\t\t\t\t\t<div class=\"gmx-style-legend\">\n\t\t\t\t\t\t<span class=\"legendIconEye enabled pointer cmd:toggleStyle\"></span>\n\t\t\t\t\t\t<LegendIconCell item={it} type={properties.GeometryType} />\n\t\t\t\t\t\t<span class=\"styleName\">{it.Name}</span>\n\t\t\t\t\t</div>\n\t\t\t\t{/each}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{/if}\n\t\t{/if}\n\t</span>\n  {/if}\n{/if}\n</div>\n\n{#if line.content.children}\n\t<ul class=\"group css-treeview id_{nodeID} {isOpened || isRoot ? '' : 'collapse'} {isRadio}\" ref:ul>\n\t{#each line.content.children || [] as child}\n\t\t<svelte:self line={child} parentProps={line.content.properties} bind:layersTree bind:gmxTimeline />\n\t{/each}\n\t</ul>\n{/if}\n</li> \n\n<script>\n\n\timport LegendIconCell from './LegendIconCell.html';\n\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\t//gmxTimeline: false,\n\t\t\t\tline: null\n\t\t\t}\n\t\t},\n\t\t// helpers: {\n\t\t// },\n\t\tcomputed: {\n\t\t\tcheckboxType: ({ parentProps }) => parentProps && parentProps.list ? 'radio' : 'checkbox',\n\t\t\tcheckboxName: ({ parentProps }) => parentProps && parentProps.GroupID || '',\n\t\t\tproperties: ({ line }) => line.content.properties,\n\t\t\tisRadio: ({ properties }) => properties.list ? 'radio' : 'checkbox',\n\t\t\tnodeID: ({ properties }) => properties ? properties.name || properties.GroupID : 'root',\n\t\t\tstyles: ({ properties }) => properties.gmxStyles ? properties.gmxStyles.styles : [],\n\t\t\tmultiStyles: ({ properties }) => properties.gmxStyles && properties.gmxStyles.styles.length > 1 ? 'multiStyles' : '',\n\t\t\tisRoot: ({ properties }) => properties.MapID,\n\t\t\tisOpened: ({line, layersTree}) => {\n\t\t\t\tlet content = line.content,\n\t\t\t\t\tprops = content.properties,\n\t\t\t\t\tnodeID = props.GroupID || 'root';\n\t\t\t\treturn layersTree.expanded[nodeID];\n\t\t\t},\n\t\t\tisGroupVisible: ({line, layersTree}) => {\n\t\t\t\tlet content = line.content,\n\t\t\t\t\tprops = content.properties,\n\t\t\t\t\tnodeID = props.GroupID || 'root';\n\t\t\t\treturn layersTree.visible[nodeID];\n\t\t\t},\n\t\t\tisVisible: ({line, layersTree}) => {\n\t\t\t\treturn layersTree.visible[line.content.properties.name];\n\t\t\t}\n\t\t},\n\t\tcomponents: {\n\t\t\tLegendIconCell\n\t\t},\n\t\tmethods: {\n\t\t\tclickOnExpander(target) {\n\t\t\t\tlet {line} = this.get();\n\t\t\t\t\n\t\t\t\tif (line.type === 'group') {\n\t\t\t\t\tlet node = this.refs.ul;\n\t\t\t\t\tif (node) {\n\t\t\t\t\t\tnode.classList[node.classList.contains('collapse') ? 'remove' : 'add']('collapse');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t// toggleVisibility(target) {\n\t\t\t\t// let {line} = this.get(),\n\t\t\t\t\t// node = line.type === 'group' ? this.refs.line.getElementsByClassName('expanderInput')[0] : target;\n\t\t\t\t\n\t\t\t\t// if (node) {\n\t\t\t\t\t// if (node.checked) {\n\t\t\t\t\t\t// node.checked = false;\n\t\t\t\t\t\t\n\t\t\t\t\t// } else {\n\t\t\t\t\t\t// node.checked = true;\n\t\t\t\t\t// }\n\t\t\t\t\t// if (this.refs.ul) {\n\t\t\t\t\t\t// this.refs.ul.classList[node.checked ? 'remove' : 'add']('collapse');\n\t\t\t\t\t// }\n\t\t\t\t// }\n\t\t\t// },\n\t\t\ttoggleTimeline(node) {\n\t\t\t\tif (node) {\n\t\t\t\t\tif (node.classList.contains('disabled')) {\n\t\t\t\t\t\tnode.classList.remove('disabled');\n\t\t\t\t\t\tnode.classList.add('enabled');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.classList.add('disabled');\n\t\t\t\t\t\tnode.classList.remove('enabled');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tshowInfo(target) {\n\t\t\t\tlet node = target.parentNode.nextElementSibling.getElementsByClassName('description')[0];\n\t\t\t\tif (node) {\n\t\t\t\t\tif (node.classList.contains('collapse')) {\n\t\t\t\t\t\tlet {line} = this.get();\n\t\t\t\t\t\tnode.innerHTML = line.content.properties.description || '';\n\t\t\t\t\t\tnode.classList.remove('collapse');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.classList.add('collapse');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n\n<style>\n\nul {\n\tpadding-inline-start: 12px;\n}\nli {\n\tlist-style: none;\n    text-overflow: ellipsis;\n    white-space: initial;\n    overflow-x: inherit;\n\twidth: 100%;\n}\nli.line > .icons span.cont-center {\n\tvisibility: visible;\n}\nli.line:hover > .icons span.cont-center {\n\tvisibility: visible;\n}\nli.line:hover > .cont label.title {\n\tfont-weight: normal;\n}\n\nsvg {\n\tpointer-events: none;\n}\n\nsvg {\n    height: 14px;\n    width: 14px;\n}\n.timeline.disabled {\n\tfill: #999999;\n}\n.timeline.enabled {\n\tfill: #45B0D8;\n}\n\n.pointer {\n    cursor: pointer;\n}\n.expanderInput {\n\tdisplay: initial;\n\tposition: relative;\n\tright: 17px;\n\ttop: 0;\n}\n.expanderCont {\n    position: relative;\n\ttop: -5px;\n}\n.legend {\n\tpadding-left: 20px;\n    display: none;\n}\n.legend-cont {\n\tfloat: left;\n}\n\ninput.check.visibility:checked ~ .legend {\n    display: block;\n\tclear: both;\n}\n.gmx-style-legend .legendIconCell.style {\n    top: 0px;\n    position: relative;\n}\n.gmx-style-legend .legendIconCell {\n    width: 100%;\n}\n.legendIconEye {\n\tdisplay: inline-block;\n}\n.legendIconEye > .off {\n    position: relative;\n}\n.legendIconEye.enabled > .on, .legendIconEye > .off {\n    display: inline-block;\n}\n.legendIconEye > .on, .legendIconEye.enabled > .off {\n    display: none;\n}\n\n:global(.collapse) {\n    display: none;\n}\n\nspan.cont-overlays {\n    position: relative;\n    left: 26px;\n    padding-top: 2px;\n}\nspan.icons {\n\tz-index: 1;\n    right: 8px;\n    position: relative;\n    /*position: absolute;*/\n}\n.hidden {\n    visibility: hidden;\n}\n\n.styleName {\n    position: relative;\n    bottom: 4px;\n    z-index: 2;\n    font-size: 11px;\n\n}\n\n\n</style>\n",
    "<span class=\"legendIconCell style\">\n{#if item.RenderStyle.iconUrl}\n\t<img src=\"{item.RenderStyle.iconUrl}\" crossorigin=\"\" alt=\"Style Icon\" />\n{:else}\n\t<span class=\"{type} legendIconStyle \" style=\"background-color: {backgroundColor}; border-color: {borderColor};\"></span>\n{/if}\n</span>\n \n<script>\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t}\n\t\t},\n\t\tcomputed: {\n\t\t\tbackgroundColor: ({ item }) => L.gmxUtil.dec2rgba(item.RenderStyle.fillColor, item.RenderStyle.fillOpacity || 1),\n\t\t\tborderColor: ({ item }) => L.gmxUtil.dec2rgba(item.RenderStyle.color, item.RenderStyle.opacity || 1)\n\t\t},\n\n\t\tonstate({ changed, current, previous }) {\n // console.log('LegendIconCell in onstate', changed, current, previous);\n\t\t}\n\t}\n</script>\n\n\n<style>\n.legendIconCell {\n    /*\n\tleft: -8px;\n    position: relative;\n\t*/\n}\n.legendIconCell img {\n    height: 13px;\n}\n.legendIconCell .polygon {\n    display: inline-block;\n}\n\n.legendIconCell .linestring {\n    border-bottom: unset;\n    border-top: unset;\n    border-right: unset;\n\tborder-radius: unset;\n    border-width: 2px;\n}\n.legendIconCell .point {\n    display: inline-block;\n    width: 10px;\n    height: 10px;\n    /*top: -4px;*/\n}\n.legendIconCell span {\n    width: 10px;\n    height: 10px;\n    border: solid;\n    border-width: 1px;\n\t/*display: inline-block;*/\n    /*position: relative;*/\n    /*top: -2px;*/\n    margin-right: 2px;\n    margin-bottom:2px;\n}\n\n.check.visibility.pointer {\ndisplay: inline-flex;\n}\n\n\n\n\n</style>\n"
  ],
  "names": [],
  "mappings": "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"
}